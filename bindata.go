// Code generated by go-bindata.
// sources:
// data/index_handler.template
// data/node_handler.template
// data/report_handler.template
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataIndex_handlerTemplate = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x79\x73\xdb\xb8\x15\xff\xbb\xfe\x14\x6f\x91\xec\x4a\x9a\x35\x49\xdb\x49\xd6\x89\x22\x69\xc6\x6b\xa7\x4e\xda\xdc\xc7\xa6\xbb\x3b\x99\x06\x22\x9e\x44\xd8\x20\x40\x03\xa0\x8e\x6a\xf4\x81\xfa\x35\xfa\xc9\x3a\xe0\x25\x52\x87\x1d\x37\x3b\xfd\xa3\x69\x32\x13\xe1\x7a\xf7\x0f\xc0\x7b\x60\x7a\xdf\x9d\xbd\x3a\x7d\xff\xeb\xeb\x27\x10\xd9\x58\x0c\xf6\x7a\xee\x07\x04\x95\xe3\x3e\x41\x49\x06\x7b\x00\xbd\x08\x29\x73\x0d\x80\x9e\xe5\x56\xe0\xe0\xa5\x62\x08\xcf\xb9\xb1\xbd\x20\x1f\xc8\x27\x63\xb4\x14\xc2\x88\x6a\x83\xb6\x4f\x52\x3b\xf2\x1e\x92\xfa\x94\xa4\x31\xf6\xc9\x84\xe3\x34\x51\xda\x12\x08\x95\xb4\x28\x6d\x9f\x4c\x39\xb3\x51\x9f\xe1\x84\x87\xe8\x65\x9d\x7d\xe0\x92\x5b\x4e\x85\x67\x42\x2a\xb0\x7f\xe8\x1f\x94\xac\x04\x97\x97\x10\x69\x1c\xf5\x49\x64\x6d\x62\xba\x41\x10\xd3\x59\xc8\xa4\x3f\x54\xca\x1a\xab\x69\xe2\x3a\xa1\x8a\x83\x6a\x20\xb8\xe7\xdf\xf3\x7f\x0a\x42\x63\x56\x63\x7e\xcc\xa5\x1f\x1a\x43\x40\xa3\xe8\x13\x63\xe7\x02\x4d\x84\x68\x4b\x41\x26\xd4\x3c\xb1\x60\x74\xb8\x92\x14\x2a\x86\xfe\xc5\x55\x8a\x7a\x9e\x49\xc8\x9b\xde\xa1\x7f\x78\xe4\xdf\xcf\x38\x5e\x18\x02\x5c\x5a\x1c\x6b\x6e\xe7\x7d\x62\x22\x7a\xef\xe1\x7d\x4f\x4e\x4e\xe8\xc1\x8f\x3f\xbd\x19\x3f\x0a\xc5\xf4\xd7\xd3\xf3\xf3\xd7\xc9\xd9\x9b\xe7\xbf\x24\xcf\x5f\xca\x83\xd1\x5b\xfa\xf6\xd5\xc5\xd3\x2b\x73\x78\xcf\xde\x3f\x1f\x5f\xdc\x7b\xf2\x8f\x07\x07\x7f\x93\xe7\x6f\xae\xc2\x40\x3f\x7c\x11\xc9\xb7\x67\xbf\x11\x08\xb5\x32\x46\x69\x3e\xe6\xb2\x4f\xa8\x54\x72\x1e\xab\xd4\x90\x41\x2f\xc8\xf5\xbc\x46\xe9\x2f\x73\xcf\x71\x70\xb1\xee\x9d\xed\xb6\xbc\x0f\x1f\x3c\x7b\xc3\x87\x07\x47\xc7\x57\x93\xf9\xc5\xbb\x17\xa3\xa7\x17\xaf\x5e\xd0\xe7\x97\xa3\xf4\xe3\x2f\xb3\xdf\x66\x1f\x5e\xcb\xd3\xbf\x9c\x1c\x8b\xa3\xf8\xf4\xe3\xcb\x67\xc9\xf9\xa3\xf8\xfc\xf4\xec\xe1\xf4\xfc\xe5\xb3\xf0\xf5\xd9\xf1\xfb\x19\xfd\x2a\x5b\x42\x26\x2f\x8c\x1f\x0a\x95\xb2\x91\xa0\x1a\x33\x43\xe8\x05\x9d\x05\x82\x0f\x4d\x10\xab\x18\xa5\xf5\x2f\x4c\x70\xe4\x1f\x3e\xf4\x0f\xcb\x81\xc2\x9a\x3f\x40\xc2\x69\x44\x75\x21\xe0\x27\xff\xa0\xe8\x0e\x53\xc9\x04\xde\x20\xc5\xce\x13\xec\x13\x8b\x33\x1b\x5c\xd0\x09\xcd\x47\x0b\xb0\xc1\x94\x4b\xa6\xa6\xbe\x92\x42\x51\x06\x7d\x18\xa5\x32\xb4\x5c\x49\x68\x77\x60\xb1\xb7\x97\x2f\x02\x08\x82\x55\x0b\x3e\x22\x24\x2a\x49\x05\xb5\x08\x36\x42\xb0\x74\x28\xd0\x00\x97\xa0\x52\x0d\x16\xe3\xc4\x4d\x79\x63\x94\xa8\xa9\x63\x56\xa3\xd5\xd4\x46\xa8\xc1\x46\x54\x42\x44\x27\x5c\x8e\xc1\x2a\xb8\x44\x4c\x80\x82\xc1\x84\x6a\xc7\x35\x54\xa9\xb4\x10\xa1\xc6\x1a\xe9\x14\x21\xa4\x12\x0c\x22\x44\x6a\x0a\x31\x95\x73\xd0\x6a\x6a\x9c\x0e\x1a\x81\x6a\x74\x2a\xac\x14\xaa\x91\x52\xc9\x9c\x48\x0b\x63\x3e\x41\x03\xa9\xc9\x34\xcd\xa5\x70\xc9\xb8\xc6\xd0\x8a\xb9\xbf\x69\x6d\x18\x51\x39\x46\x06\x00\x7d\xb8\xdb\x6e\xdd\x29\xfa\x7f\xcf\x24\x80\xd5\xad\x8e\x2f\x50\x8e\x6d\x04\x1e\x1c\x3e\x2e\xa9\x52\x59\xd2\xe5\x54\x55\xff\x06\xba\x11\xe5\x22\x13\x56\xd0\xe5\xfd\x5d\x44\x5b\x63\xf3\x21\x61\xb5\xb0\x78\xee\x08\x45\x6d\x60\xa4\x34\x7c\x2e\x94\xf8\x0c\x3f\xc0\xe7\x9c\xf5\xe7\x2d\x26\xf3\x11\xb4\x2b\xbb\x07\x70\x00\x1d\x58\x34\x6c\xcf\xdc\xd6\xea\xf8\xee\xc4\x5e\xad\xec\xc0\xb2\xc1\xa1\xb0\xa5\xce\xa0\x30\xa7\x49\x5f\xac\xeb\x00\x2c\x2b\x8b\x26\x54\xc3\x90\xea\x0c\xe3\x67\xd4\x52\xe8\xc3\xa2\x9c\x03\x10\x74\x88\xc2\x74\xe1\xf7\xd5\x10\xc0\x62\xa1\x9d\x1e\xe0\x9f\x6b\x9a\x44\xb0\x5c\xd6\x27\xc9\x62\xe1\x9f\x39\xb7\x2c\x97\x64\xbf\x49\x85\x92\xd5\xd7\x7e\xaa\x4d\x33\x6a\xa9\x41\xeb\x24\x2d\xea\x44\x99\xfc\x2e\xb4\x4e\x73\xcb\x5b\x0d\x8e\x43\x1a\x5e\x8e\xb5\x4a\x25\x3b\x55\x42\xe9\x2e\xb4\xee\xb0\x47\xc8\x46\xc7\xcd\x65\x8e\xf7\x6d\x2d\x28\xe4\xdd\x6c\x04\xc0\xa7\x55\x67\xb9\x0f\x5b\xb5\xff\x50\x62\xf2\x46\xfd\xf1\xd8\xfd\xfd\x7a\xfd\x2b\x89\x7f\x90\x05\x39\x72\x6e\x54\x7f\x74\xc4\x90\xe1\xd7\xab\xff\xe7\x1c\xa8\xb7\xd4\xfd\x53\x05\xea\xe5\xe3\x3a\xbc\x43\x3b\x83\x3e\x30\x15\xa6\xd9\x3d\x31\x46\xfb\x44\xa0\x6b\xfe\x3c\x7f\xc6\xda\x24\xa4\x72\x42\x0d\xe9\xb8\x89\x53\x97\xae\xcc\x6c\x9b\x1c\x31\xd2\xa9\x98\x14\x07\x77\x3c\xff\x99\x6a\xe8\x83\xc4\x29\x64\xfb\xa5\x1d\xda\x59\xc3\x61\xee\xf8\xef\x42\x6b\x48\x75\x6b\x0d\xdc\xdd\xc6\x26\xab\x4d\xaa\xc4\x9d\xda\xa6\xdb\xf4\x7b\x96\x72\x75\x1b\x43\x00\x8c\x9b\x44\xd0\x79\x77\x44\x85\xc1\xfd\xe6\x9c\xd3\xba\x4b\xca\x8b\x0b\x9c\xa2\x59\x07\x3c\x78\x67\x69\x78\x89\x8c\xd4\x09\x96\x0d\x72\xab\x94\xb0\x3c\x59\x57\x02\x20\x56\xcc\xd9\xc3\x25\xc3\x59\x6b\x4d\xa2\x4b\x1a\xb4\xc1\xd0\x76\x21\x53\x68\x37\x7b\x8d\x26\x51\xd2\xf0\x09\x76\xc1\xea\xb4\xa9\x7a\x96\xfb\x6d\x4a\x9e\x9d\xcc\x70\xe3\x34\xc8\xd6\xe7\xd6\x6c\xe1\xe4\x10\xb0\x36\x30\xff\x22\x2e\xeb\x4c\x1a\x96\xec\x6d\x36\x97\x9d\xf2\x42\x58\x16\x8d\x7a\x32\xd0\x0b\xca\x5c\xba\x37\x54\x6c\x5e\xe4\x07\x92\x4e\x20\x14\xd4\x98\x3e\x91\x74\x32\xa4\x1a\xf2\x1f\x8f\xe1\x88\xa6\xc2\x12\xd0\x4a\x60\x36\xc9\xc7\xd9\x45\x5e\x66\x0d\xd0\x63\xbc\xa2\x75\xe9\x34\xe5\x12\xb5\x37\x12\x29\x67\xd5\x9a\xe6\xaa\x82\x75\x7e\x21\xd5\xd6\x38\x95\x52\x6b\x95\x2c\xf2\x94\xbc\x43\xd6\xc8\xac\x1a\x8f\x85\xcb\x0b\x84\xa0\x89\x41\x46\x32\x00\x17\xc3\x4e\x85\x7c\xbc\x1c\xa6\x7a\xec\x4a\x81\x3b\x39\x35\x01\xaa\x39\xf5\x70\x96\x50\xc9\x90\xf5\x49\x86\x8d\x62\xd4\x69\xaf\x95\xa8\x44\x35\x54\x73\x49\x54\x42\x65\xa9\x8c\xd1\x9e\x92\x62\x4e\x06\xef\x73\x75\x56\x8e\xe9\x05\x6e\xdd\x35\xa4\x3c\x54\xd2\xcb\xd8\xff\xb7\x96\xf6\x82\xdc\x95\x8d\x31\xba\xe6\xd7\xa1\xa6\x92\x91\xc1\x0f\x72\x68\x92\xc7\xd7\xff\xfb\x3a\x4d\x12\xb4\xde\xbb\x34\x8e\xa9\x9e\xf7\x02\x5a\x8b\x73\xc0\xf8\x64\x2d\xec\x9c\x55\x1e\x5d\x01\x25\x8f\x52\x09\xb3\x2a\x6a\x0d\x15\x53\x51\xd3\xb1\x5c\x2a\xe9\x84\x0c\xf6\xfe\x04\x79\x21\x36\xe8\xd1\xa2\x12\x0b\xc8\xa0\xe9\x91\xb1\x98\x27\x91\x73\x0b\x54\x2d\x2f\x52\x71\x19\xed\x88\x33\x86\xb2\x4f\xdc\x16\xab\x9c\x06\x4f\x55\x8c\xce\xa0\x5e\x20\x78\xd3\x85\xa9\xd8\x61\x65\xad\xd3\x0b\x24\x2d\x9b\xdb\xb6\x05\x19\x94\x77\x40\x2f\x3a\xcc\x6b\xd8\xca\x89\xd1\xe1\x6a\x32\x3f\xf3\x33\xc7\x15\xc7\x3f\x64\xc5\x61\x9f\x44\xc8\xc7\x91\xed\xc2\xe1\x83\x83\x64\xf6\x18\xb2\x4a\xb5\x0b\x8f\x0e\xbe\x7f\x0c\x31\xd5\x63\x2e\x3d\x81\x23\xdb\x7d\xb0\xea\xeb\x8c\xe0\xc1\xf7\xce\xc6\x9c\x59\x63\xe7\x3a\x19\xa3\x52\xc8\xa0\x69\x58\x52\xa0\xa1\x17\x24\x2b\xdd\x36\x82\xe2\x59\x3a\x34\xf5\xad\x2e\x78\xb9\x82\x86\x96\x4f\x9c\x77\x69\x73\x93\x5a\x3a\x24\x45\xd8\xee\x50\x21\xc8\xe0\x44\x88\x4d\xaf\x17\xe1\xdd\x49\x99\xdf\xfa\x64\x50\x5c\xc7\x8d\xe0\x0f\x29\x1b\x23\xc9\xad\xab\xe5\x9a\x55\xa0\x6f\x2f\xad\xc8\x58\xc8\xa0\x4c\xbe\x76\xc9\x6b\x24\xc7\x5f\x21\xb0\x2a\x15\xc8\xa0\xca\x97\x2a\x2e\xeb\xec\x72\x7c\xee\x6d\x39\x93\x5d\xee\x5f\x3c\x73\xd4\x83\xf4\x9d\xe7\xc1\x89\x10\xe0\x79\x5b\x76\xab\x8b\x49\x9d\x3e\xa1\x12\x61\x44\x59\x56\x56\x95\x41\xad\xef\x8e\xbc\x2e\x29\x48\xf3\x2a\xa5\xce\x40\x14\x85\x98\x37\x54\x9a\xa1\x46\x56\x74\x8d\xd5\x3c\xa9\x7a\xa1\x92\x0c\xa5\xa9\xfa\x91\x9a\xe0\xc6\x21\x6c\xf5\x60\xed\xb6\xec\xd9\x28\xdb\x4a\xbd\xc0\x46\xdb\xe6\xde\x59\x6a\x77\x4f\x22\xca\xcd\xb9\x5e\xb0\x2e\xa6\xca\x09\x9d\x24\xb3\x96\x13\x3a\xad\xd6\xaf\x70\x58\x2c\xf8\x08\xf0\x0a\xfc\x4c\x3e\x14\x30\x24\xb0\x5c\x96\x8e\x61\x8e\xa3\x26\xb0\x58\x00\x4a\xb6\xce\x73\x1b\x8f\x12\x10\x35\x26\x5c\x8e\x14\x81\x6b\x78\x64\xf8\x2a\x8e\x48\xa9\x18\x06\x2e\x81\xbd\x62\x72\xb9\x24\x9b\x0e\x61\x83\x6a\xb6\x17\x58\xb6\x63\x41\xa6\xcd\xce\x15\x55\xdc\x79\x9c\xdf\xc2\xe8\x5a\x7d\x97\x38\x9f\x58\x27\xb5\x68\x6c\x92\x6f\x73\xfb\x7a\x4a\xdd\x0b\x32\x70\x6c\x9c\xc5\x4d\x64\x17\x47\xc2\x56\x70\x97\x81\xd8\x86\xef\x5d\xa8\xae\x97\xdf\xdf\x12\xb0\x77\x83\x78\x5d\xf9\x75\x50\xff\x8f\xc1\xee\x3f\x87\x62\x79\x5d\x6c\xc5\x62\xb5\xa1\x6f\x03\xc6\xc6\x0b\xd2\xb7\x8c\xc6\xda\x71\xb8\x0b\x8e\xf9\xf1\xf8\x7f\x30\x16\x60\x5c\x3d\xbc\x6c\x85\xe3\x2a\xe5\xb8\x15\x20\xd7\x1e\x35\xbf\x65\x48\xd6\x3c\xb8\x05\x94\xdf\x30\x0e\x1b\x9d\xad\x05\xc6\x35\x63\x91\x86\xa0\xea\x8c\x94\xb2\xa8\xf3\x6b\x39\x6b\xee\x78\x66\xa8\x57\x5d\x35\xfd\x1a\x2b\x84\x17\xb3\xea\x13\xe1\x16\x7d\x77\x50\xdc\x5f\xc7\x66\xb3\x28\xda\x0c\x66\xbd\x50\x2d\xbf\xf2\x18\x8b\x13\xf4\x2f\x31\x4e\xfc\x11\x0f\xc8\xe0\x5f\xff\x84\xa3\x83\xc3\xe3\xec\x49\x0c\x27\x08\x7f\xc5\x38\xd9\x56\x8a\xae\x17\xa3\x9b\x45\x77\xd3\xe3\xb9\x93\xaa\xfe\x97\x7c\x0a\x02\xb8\xdb\x2e\x3f\xff\xb4\x3b\xb5\xe7\xa9\xbb\xed\x96\x5f\x7e\x83\xf8\xbd\x42\xf3\xa7\x56\xc7\x47\x1a\x46\xdb\x69\x1c\x95\x8d\xb8\xe9\xf8\xa1\x31\xed\x56\x98\x6a\xa3\x74\x6b\xbf\x95\xa8\xec\x8d\xae\xd5\xf1\xb3\xed\xde\x6e\xfa\x6c\x07\xab\x3a\x3b\xca\xd8\xa9\x73\x7a\xbb\x95\x97\x24\xad\xd5\x93\x68\xfe\x67\xb9\x7f\x6b\x9e\x1a\x63\x35\xc1\x1b\xd8\x76\xfc\x50\xf0\xf0\xb2\x7d\x1d\xc3\xea\x3d\x57\xa8\x30\x7b\x17\xca\x3e\xe4\x14\x8a\x5b\xab\xdb\xad\xca\x7d\x9b\x02\x9a\xdd\xfa\xf4\xea\x71\x0f\x8a\xe7\x63\xa9\xa6\xd0\x87\xfc\x23\x63\xbb\x31\x9b\x05\x8b\xc7\xb8\x11\x1d\xbe\x0f\xd8\x69\x3e\x69\x3a\x4e\x6e\xed\x8a\xd5\xdd\x36\xd6\x34\xc5\x9c\x51\x53\xd3\x6c\x49\xf6\xed\xa6\x95\x15\xc3\x83\x16\xfc\x98\x71\xf1\x47\x5a\xc5\x6d\xa9\xa6\x1d\xf8\x11\x5a\x45\x05\xdc\x5a\xb7\x63\xa3\xd9\x7c\xa7\xcc\x9f\x27\x7b\x41\xfe\xbf\x02\xfe\x1d\x00\x00\xff\xff\xac\x0d\xe0\x2b\x26\x20\x00\x00"

func dataIndex_handlerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_dataIndex_handlerTemplate,
		"data/index_handler.template",
	)
}

func dataIndex_handlerTemplate() (*asset, error) {
	bytes, err := dataIndex_handlerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/index_handler.template", size: 8230, mode: os.FileMode(420), modTime: time.Unix(1502253678, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataNode_handlerTemplate = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xeb\x72\xdb\xba\xf1\xff\xfc\xf7\x53\xec\x1f\xcd\xa9\xa4\x71\x44\xca\xce\x5d\x26\x35\x93\x3a\x39\x4e\xda\xdc\xe3\xe6\xf4\x9c\x4c\x3e\x40\xc4\x52\x84\x02\x02\x34\x00\xca\x52\x35\x7a\xa0\xbe\x46\x9f\xac\x03\xde\x44\xea\xe2\x9c\x69\x3b\xf5\x07\x0b\xd8\x05\x76\x7f\xbb\x0b\x2c\x76\x19\xfc\xff\x8b\xf7\x97\xd7\xbf\x7e\x78\x09\x89\x4d\xc5\xe4\x24\x70\x3f\x20\xa8\x9c\x85\x04\x25\x99\x9c\x00\x04\x09\x52\xe6\x06\x00\x81\xe5\x56\xe0\x64\xbd\xf6\x7e\xbe\x61\x72\xb3\x09\xfc\x92\x50\x32\x53\xb4\x14\xa2\x84\x6a\x83\x36\x24\xb9\x8d\x87\x4f\x49\x9b\x25\x69\x8a\x21\x59\x70\xbc\xcd\x94\xb6\x04\x22\x25\x2d\x4a\x1b\x92\x5b\xce\x6c\x12\x32\x5c\xf0\x08\x87\xc5\xe4\x3e\x70\xc9\x2d\xa7\x62\x68\x22\x2a\x30\x3c\xf3\x46\xb5\x28\xc1\xe5\x77\x48\x34\xc6\x21\x49\xac\xcd\xcc\xd8\xf7\x53\xba\x8c\x98\xf4\xa6\x4a\x59\x63\x35\xcd\xdc\x24\x52\xa9\xdf\x10\xfc\x07\xde\x03\xef\xb1\x1f\x19\xb3\xa5\x79\x29\x97\x5e\x64\x0c\x01\x8d\x22\x24\xc6\xae\x04\x9a\x04\xd1\xd6\x8a\x4c\xa4\x79\x66\xc1\xe8\x68\xab\x29\x52\x0c\xbd\xf9\x4d\x8e\x7a\x55\x68\x28\x87\xc3\x33\xef\xec\xdc\x7b\x58\x48\x9c\x1b\x02\x5c\x5a\x9c\x69\x6e\x57\x21\x31\x09\x7d\xf0\xf4\xe1\x50\x2e\x9e\xd3\xd1\xe9\xe3\x8f\xb3\x67\x91\xb8\xfd\xf5\xf2\xea\xea\x43\xf6\xe2\xe3\x9b\x2f\xd9\x9b\x77\x72\x14\x7f\xa2\x9f\xde\xcf\x5f\xdd\x98\xb3\x07\xf6\xe1\xd5\x6c\xfe\xe0\xe5\xdf\x1f\x8d\xfe\x26\xaf\x3e\xde\x44\xbe\x7e\xfa\x36\x91\x9f\x5e\xfc\x46\x20\xd2\xca\x18\xa5\xf9\x8c\xcb\x90\x50\xa9\xe4\x2a\x55\xb9\x21\x93\xc0\x2f\x71\xde\x01\xfa\xf7\xb9\xe7\x89\x3f\xdf\xf5\xce\x61\x5b\xae\xa3\x47\xaf\x3f\xf2\xe9\xe8\xfc\xc9\xcd\x62\x35\xff\xfc\x36\x7e\x35\x7f\xff\x96\xbe\xf9\x1e\xe7\xbf\x7c\x59\xfe\xb6\xfc\xeb\x07\x79\xf9\xe7\xe7\x4f\xc4\x79\x7a\xf9\xcb\xbb\xd7\xd9\xd5\xb3\xf4\xea\xf2\xc5\xd3\xdb\xab\x77\xaf\xa3\x0f\x2f\x9e\x5c\x2f\xe9\x7f\x64\x4b\xc4\xe4\xdc\x78\x91\x50\x39\x8b\x05\xd5\x58\x18\x42\xe7\x74\xe9\x0b\x3e\x35\xfe\x65\x42\xb5\xf5\xe6\xc6\x3f\xf7\x1e\x7b\xa3\x6a\x3a\xcd\x25\x13\x58\x5b\xf4\x5f\xd0\x92\xaa\x14\x65\xa5\xe6\xec\xa9\x77\x56\x13\xee\xd6\x60\x57\x19\x86\xc4\xe2\xd2\xfa\x73\xba\xa0\x25\x95\x4c\x4e\x8a\x45\x70\xcb\x25\x53\xb7\x9e\x92\x42\x51\x06\x21\xc4\xb9\x8c\x2c\x57\x12\xfa\x03\x58\x97\x4b\x00\x16\x54\x43\xa6\xb8\xb4\x06\x42\xf8\x5a\x53\xeb\xbf\xf5\x5a\x53\x39\x43\xf0\xde\x29\x86\x06\x36\x9b\x93\xff\xdb\xb2\xbc\x4f\xb9\xb4\x3c\xc5\xcd\x06\xee\xef\x6f\x44\xc9\x36\x9b\x9a\xfc\xed\xa2\xad\x4f\xd0\x29\x8a\x42\xdf\x96\x1e\x2b\x0d\x7d\xc7\xe4\x10\x8e\x2e\x80\x43\x50\xc1\xf2\x04\xca\x99\x4d\x2e\x80\x9f\x9e\x42\x0b\x38\x54\x62\xbc\x2c\x37\x49\x1f\xf8\xe9\x19\x0c\x2e\xb6\xcc\x4d\x5b\x61\xa4\x64\xcc\x67\x10\xb6\x77\x3b\xdf\x8d\xa1\x27\xb8\xc4\x5e\x0b\x3e\xa3\x96\x8e\xdb\xeb\x6a\x3d\xe3\xea\xb7\x63\xaa\x5b\x6d\xd0\x9a\x31\x7c\x5d\x77\x5d\x50\x2c\x1e\x03\x31\x18\x29\xc9\x0c\xd9\xf1\x50\xa9\xa6\xb4\x70\x87\x15\x73\x21\xc6\x10\x53\x61\xb0\xc3\xd9\x7c\x6b\x59\xd7\xe2\xa8\xcc\x05\xd5\xec\x80\xd6\x68\x32\x25\x0d\x5f\xe0\x18\xac\xce\xbb\xa2\x8a\x14\x3b\xde\x41\xcc\xb8\xc9\x04\x5d\x8d\xf7\x56\x03\xb8\x13\x36\xee\x7d\xc8\xb3\x0c\x2d\x54\x51\xef\x75\xb0\x75\xc5\x2b\x25\x2c\xcf\x76\x21\x01\xa4\x8a\x39\x9f\x73\xc9\x70\xd9\xdb\xd1\xe1\xb2\x82\x36\x18\xd9\x83\xb6\x77\x66\x89\x5a\xa0\x3e\x26\x5c\x22\xd5\x68\xec\x1d\xe2\x9d\x81\xc7\x85\x17\xaf\xc3\x3e\xf4\xe5\xf3\x25\x1e\x08\xf3\xd6\x6d\x07\x50\xbb\x98\xed\x10\x56\x3f\x14\x73\xc0\xfd\x15\xa8\x37\xe5\x91\xda\xdb\xfa\xa3\xcd\xd5\x61\xfc\x6c\x35\x97\xb3\x31\xf4\xbe\x50\x91\x77\xc3\x07\xed\x0b\x53\x23\x3f\x39\xcc\x6c\x86\x9b\x93\xce\x15\xb3\x4b\x08\x81\xa9\x28\x2f\xf2\xd6\x0c\xed\x4b\x81\x6e\xf8\xa7\xd5\x6b\xd6\x27\x11\x95\x0b\x6a\xc8\xc0\x31\x2e\xdd\x23\xbd\xb4\x7d\x72\xce\xc8\xf6\xca\x56\xd9\x2a\x5d\xbd\xe1\x12\x21\x04\x89\xb7\x50\x24\xdb\x7e\x64\x97\xf7\xab\x2b\x3c\xb8\xa8\x94\x96\x28\xda\x59\x31\xf0\xeb\xa2\x22\x98\x2a\xb6\xaa\x12\xa5\xa4\x0b\x88\x04\x35\x26\x24\x92\x2e\xa6\x54\x43\xf9\x33\x64\x18\xd3\x5c\x58\x02\x5a\x09\x2c\x98\x7c\x46\xdd\x45\xaa\xde\x6a\x80\x80\xf1\x66\xaf\xab\x2b\x28\x97\xa8\x87\xb1\xc8\x39\x6b\xd6\x74\x57\x55\xa2\x1d\x0e\xd4\xad\x35\x0e\x52\x6e\xad\x92\x55\xc2\x2e\x27\x64\x67\x9b\x55\xb3\x99\x40\x88\x94\x10\x34\x33\xc8\x48\x91\x24\x2a\xb2\x83\x50\xd2\x6b\x32\xd5\x33\x57\x13\xfd\xa1\xdc\x4d\x80\x6a\x4e\x87\xb8\xcc\xa8\x64\xc8\x42\x52\x9c\xc6\x8a\xea\xd0\x6b\x25\x1a\x55\x1d\x68\xee\x35\xc9\xa8\xac\xc1\x18\x3d\x54\x52\xac\xc8\xe4\xba\x84\xb3\x75\x4c\xe0\xbb\x75\x77\x6c\xe5\x91\x92\xc3\x42\xfc\xff\x6a\x69\xe0\x97\xae\xec\xd0\xe8\x8e\x5f\xa7\x9a\x4a\x46\x26\x7f\x94\x53\x93\x5d\xdc\xfd\xbf\xcc\x70\xc3\xcf\x79\x9a\x52\xbd\x0a\x7c\xda\x8a\xb3\xcf\xf8\x62\x27\xec\x9c\x35\x1e\xdd\x1e\x94\x32\x4a\xf5\x31\x6b\xa2\xd6\x81\x98\x8b\x16\xc6\x7a\xa9\xa4\x0b\x32\x29\xdf\xd7\x40\xf0\x49\x40\xab\x92\xd4\x27\x93\xae\x47\x66\x62\x95\x25\xce\x2d\xd0\x8c\x86\x89\x4a\xeb\x68\x27\x9c\x31\x94\x21\x71\xb9\xa0\x71\x1a\xbc\x52\x29\x3a\x83\x02\x5f\xf0\xae\x0b\x73\x71\xc4\xca\xd6\x24\xf0\x25\xad\x87\x87\xae\xc5\xf6\xd2\xa8\xc6\xb4\xa9\x46\xca\x22\x9d\xa7\xd3\xf6\x75\x11\x7c\x9f\x3f\xe4\x16\x53\xd2\xb1\xf8\x30\xdc\xe3\xbb\x81\x46\x96\x2f\x90\x4c\xd6\x6b\x28\x3a\x09\x70\xad\xc4\x76\x6f\xe0\xab\xc6\xcc\x20\x39\x6b\xf7\x1b\xc9\x59\xc3\x28\xb3\x54\x11\xd7\x2a\x61\x41\x51\xc4\x87\x24\x41\x3e\x4b\xec\x18\xce\x47\xa3\x6c\x79\x01\x45\x47\x31\x86\x67\xa3\x9f\x2e\x20\xa5\x7a\xc6\xe5\x50\x60\x6c\xc7\x8f\xb6\x73\x5d\x6c\x78\xf4\x93\x0b\x41\x29\xac\x51\x93\x55\x87\x31\xf0\xb3\x86\x66\xe9\xd4\x5d\xfe\xd2\xb8\x72\x52\xfc\x1f\x4e\x95\x66\xa8\x91\x55\x53\x63\x35\xcf\x9a\x99\xab\x2d\x50\x9a\x66\x5e\xbc\x8c\x6d\x77\x5b\xdd\x09\xb6\x4d\x26\xae\x92\x0b\x7c\x9b\xec\xd2\x3f\x5b\x6a\x73\x73\x88\x73\xcd\xd3\x83\x3b\x7e\xa6\x5c\x20\x3b\xc4\xb9\x4c\x5c\xd5\x78\x90\x75\xad\x2c\x15\x5d\x46\xe0\xb7\x51\x76\x4b\xce\x6d\x09\xe9\x6c\xe9\x64\x89\xf5\x9a\xc7\x80\x37\xe0\x39\xe4\x08\x24\x2e\xe0\x10\xd8\x6c\x6a\x37\x32\x27\x48\x13\x58\xaf\x01\x25\x83\xcd\xe6\xce\xfd\x51\x09\xba\x2d\x80\xcb\x58\x11\x38\xb2\xbf\x48\xc3\xd5\x81\xd5\xe8\xfa\x4f\x7f\xbd\xf6\x5e\xbb\x75\xdd\xdb\x6e\xd9\x64\xbd\xbe\xb7\xed\x6f\xd9\x3e\xb7\xc4\x70\x90\xdb\x9c\x09\x9e\x96\xb9\x1f\xdd\x28\x24\xeb\xb5\xf7\xdc\x3a\x55\xd5\xe0\x88\xe0\x32\x48\x47\xd9\x55\xa4\x8e\xf2\x8b\x70\xed\x72\x77\x03\xd6\x2e\xf5\x03\xbf\x38\x89\x75\xda\xd8\x66\x90\xbd\x43\x7f\x80\x92\x68\xf0\xab\x61\xac\x94\x45\x5d\x5c\xc5\x72\x78\xf7\xbb\x7c\xe4\x45\x8e\x94\x18\xa6\xac\xf9\x68\x00\x47\x12\x79\x77\xf5\xc3\xbb\x92\xf5\xee\xdb\xd9\xce\xd4\x75\xaf\x67\x2c\x2e\xd0\xfb\x8e\x69\xe6\xc5\xdc\x27\x93\x7f\xfe\x03\xce\x47\x67\x4f\x60\x08\x9f\x1d\x07\xfe\x82\x69\xf6\xef\xe7\xe2\x1f\xb7\x7f\x95\x80\x7b\xfd\xba\xe3\xeb\x0f\x5a\x45\xe3\xbd\x7e\xcf\xab\x12\x8c\xfe\xda\x1c\xe2\x6f\xbd\x81\x87\x34\x4a\x0e\xef\x71\xbb\x6c\xc2\xcd\xc0\x8b\x8c\xe9\xf7\xa2\x5c\x1b\xa5\x7b\xf7\x7b\x45\x03\x83\xba\x37\xf0\x8a\xcc\xd3\xdf\xe9\x64\x0e\x8b\x6a\x8b\xa3\x8c\x5d\x3a\xe7\xf6\x7b\x65\x02\xef\xb5\x7b\x38\xd8\x2b\xce\x7f\x97\x4c\x8d\xa9\x5a\xe0\x0f\xc4\x0e\xbc\x48\xf0\xe8\x7b\xff\x2e\x81\x4d\x35\x2b\x54\x54\x94\x40\x10\x6e\x81\x5b\xab\xfb\xbd\xc6\x7d\xfb\x0a\xba\xd3\x4e\x6b\xea\xaa\xd8\xed\xd4\x55\xcf\x52\xdd\x42\x08\x65\xcf\xdf\x6f\x8a\xdc\x26\x5a\xae\xdd\xda\x0d\x0f\xbf\x0f\x38\xe8\x36\x03\x4e\x92\x5b\xbb\x15\x75\xaf\x8f\x2d\xa8\x58\x0a\xea\x42\x2d\x96\x24\x36\x15\xfd\x5e\x51\x65\x4c\x7a\x70\x5a\x48\xf1\x62\xad\xd2\xbe\x54\xb7\x03\x38\x85\x5e\x55\x47\xf4\x76\x0d\xd9\x1b\xee\x7c\xa9\xf0\xcb\xdb\x5b\x56\xe8\x65\x61\x1e\xf8\xe5\x87\xc1\x7f\x05\x00\x00\xff\xff\xba\xbd\xfa\xfe\x29\x14\x00\x00"

func dataNode_handlerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_dataNode_handlerTemplate,
		"data/node_handler.template",
	)
}

func dataNode_handlerTemplate() (*asset, error) {
	bytes, err := dataNode_handlerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/node_handler.template", size: 5161, mode: os.FileMode(420), modTime: time.Unix(1502254652, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataReport_handlerTemplate = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\xdd\x8e\xe4\x34\x13\xbd\xfe\xe6\x29\xea\x33\x12\x57\x24\xde\x66\x10\xac\x16\x27\x12\x5a\x58\x21\xb1\xb0\xab\x9d\xb9\xe1\x6a\x55\x1d\x57\x27\xd6\x38\x76\xb0\x9d\x9e\x6d\xb5\xfa\x81\x78\x0d\x9e\x0c\xb9\xf3\xd3\x49\xa6\xa7\xc5\x80\x00\xb1\x37\xdd\xae\xe3\x3a\x4e\xd5\xa9\xb8\x54\x11\xff\xff\xf6\xcd\xcb\xdb\x9f\xdf\x7e\x07\x55\xa8\x75\x7e\x25\xe2\x1f\x68\x34\x65\xc6\xc8\xb0\xfc\x0a\x40\x54\x84\x32\x2e\x00\x44\x50\x41\x53\xfe\xb6\x6d\x1a\x0a\xf0\x8e\x1a\xeb\x82\xe0\x1d\xd8\x39\xd4\x14\x10\x8a\x0a\x9d\xa7\x90\xb1\x36\x6c\x92\xe7\x6c\xba\x65\xb0\xa6\x8c\x6d\x15\xdd\x47\x2e\x83\xc2\x9a\x40\x26\x64\xec\x5e\xc9\x50\x65\x92\xb6\xaa\xa0\xe4\x68\x7c\x06\xca\xa8\xa0\x50\x27\xbe\x40\x4d\xd9\x2a\x7d\x36\x1c\xa5\x95\xb9\x83\xca\xd1\x26\x63\x55\x08\x8d\x7f\xc1\x79\x8d\x1f\x0a\x69\xd2\xb5\xb5\xc1\x07\x87\x4d\x34\x0a\x5b\xf3\x11\xe0\xd7\xe9\x75\xfa\x25\x2f\xbc\x3f\x61\x69\xad\x4c\x5a\x78\xcf\xc0\x91\xce\x98\x0f\x3b\x4d\xbe\x22\x0a\x5d\xe2\x7c\xc8\x5c\xac\xad\xdc\xf5\xcf\x36\xb8\x85\x42\xa3\xf7\x19\x33\xb8\x5d\xa3\x83\xee\x2f\x91\xb4\xc1\x56\x07\x06\xce\x6a\x3a\x6e\xaa\x12\x83\xb2\xa6\x8f\x1a\x40\x48\x35\x72\x63\xe2\xa8\x0c\xb9\x64\xa3\x5b\x25\x47\x9f\xb9\x57\x7f\x74\x8c\x83\xdc\xc4\x27\x86\xd4\x86\x60\x0d\x84\x5d\x43\x19\xeb\x0c\xb6\xa0\x05\x5b\x96\x9a\xa0\xb0\x5a\x63\xe3\x49\x32\x90\x18\xb0\x87\x63\x08\x1d\x3e\xc0\xe8\xca\x58\xb4\x4f\x3a\x36\x03\x74\x0a\x13\xfa\xd0\xa0\x91\x24\x33\xb6\x41\x1d\x7d\x8f\x68\x8c\xde\x59\x3d\x3e\x6a\x16\x1a\x80\xf0\x0d\x9a\x21\x18\xef\x12\x6b\xf4\x8e\xe5\xb7\x5d\x38\x27\x61\x04\x8f\x7e\x17\xa8\xaa\xb0\x26\x39\x1e\xff\x4f\xb9\x0a\xde\x49\x39\xc3\x70\xa1\xeb\xda\xa1\x91\x2c\xff\xd4\xac\x7d\xf3\xf5\xe5\xdf\xee\xaa\x24\x37\x6d\x5d\xa3\xdb\x09\x8e\x93\x3a\x73\xa9\xb6\x8b\xb2\x2b\x39\x2a\x7a\x7a\x51\xba\x2a\x0d\xaf\xd9\x58\xb5\x59\x88\xad\x9e\xc4\x38\xb8\x1a\xdc\xb2\xfc\xea\x7f\xfd\x95\xc9\x05\xf6\x77\x86\xb3\x7c\xae\x48\xa9\x77\x4d\x15\x65\x81\x71\x95\x54\xb6\x1e\xaa\x5d\x29\x29\xc9\x64\x2c\xb8\x96\x46\xd1\xe0\x7b\x5b\x53\x4c\x48\x70\xad\xe6\x12\xb6\xfa\x91\x2c\x27\x86\xe0\x06\x87\xe5\xb9\x6b\x71\xba\x34\x76\x4c\x6d\xed\x08\x65\xe1\xda\x7a\x3d\xbd\x2e\x5a\x3d\xdc\x4f\x54\xa0\x9a\xcd\x32\x3e\x1f\xee\x1f\x63\x1b\x2b\x89\xef\xf7\x90\xbe\xfa\x45\x1a\x38\x1c\x58\x3e\x31\x9e\x72\x28\x60\x11\xd4\x96\x58\x3e\xf4\xce\x13\x4d\x70\x3b\xca\x26\xaa\x55\xfe\x66\x4b\x2e\xf6\x49\xc1\xab\xd5\x88\x37\x3d\x11\xec\x06\x26\x21\xc0\x7d\xa5\x8a\x0a\x1c\x1a\xc0\x70\xdc\xf8\x26\xc0\xe1\xf0\x42\xf0\x66\xa4\x06\x5c\xc7\x5e\xd0\x85\xd5\x19\xc7\xdf\x64\x6d\x9d\x24\x47\xb2\x37\x7d\x70\xaa\x19\xad\xc2\x1a\x49\xc6\x8f\x76\x65\xb7\xb3\x46\x24\x82\xcb\x45\x90\xf9\xcb\x0a\x4d\x49\x12\x04\x0f\xf2\x08\xc4\x20\x06\x30\x6a\x14\x61\x1e\xdc\x43\xe6\xcd\x9d\x6a\x9a\x25\x73\x00\x2f\x32\x5f\xa1\xd2\x4b\x62\x8f\x5d\xe4\xdd\xda\x80\x7a\x4e\xeb\xa0\x33\x2c\xc1\x8f\x79\x9f\x0a\x73\x9d\xbf\xb6\xa5\x17\xbc\xba\xfe\xf3\x5d\xdd\xd9\xfb\xf9\xed\x9d\x9d\xa0\x13\x5f\x27\xab\xd8\xb5\x93\x5a\x26\xab\xb9\xe7\xbc\x67\x9c\xa7\x9e\xb8\xab\x45\x5f\xde\xef\x5d\xac\x08\xa4\xaf\x6d\xf9\xfe\x47\xf2\x1e\x4b\xf2\x87\xc3\xbc\x55\x36\xf9\x7e\x9f\x46\x29\x9a\x25\x99\xb4\xa7\x87\xde\x3f\xd9\x50\x29\x53\x82\x3b\xbe\x99\x24\xd3\x73\x4c\x23\x67\xc4\x65\xef\x3b\xd3\x24\xae\x06\xae\xda\x40\xfa\x8e\xbc\x6d\x5d\x41\xfe\xfd\x58\xe0\x49\x45\x3a\xec\xbf\x5e\x93\x65\x8e\x4f\xa8\xcb\xd3\xd5\x9d\x53\x1f\xd1\xfa\x74\x7f\x27\x62\xf7\xe0\xc7\xa3\x76\x9f\xd0\xbf\x2f\x77\xdf\xf4\x66\x6a\xf7\xd8\xc7\xa3\xf6\x32\xc9\xbf\x5f\xed\xc5\x86\x68\xfa\xc1\x6d\x7c\xd6\x19\xa4\x72\xc0\xfb\xe5\xc6\xda\x40\xee\x38\x99\x75\xcb\xcb\xe3\xfc\x23\x25\xe8\x15\x7a\xce\x2e\xcf\x7f\x73\xef\x2f\x2e\xcd\x78\xcb\x91\x7b\x3a\xe0\x0d\x1f\x45\x3e\xd0\x96\xd2\x3b\xaa\x9b\x74\xa3\x38\xcb\x7f\xfb\x15\x3e\x7f\xb6\xfa\x0a\x12\xb8\x89\x3b\xf0\x03\xd5\xcd\x5f\x19\xe1\x3a\x41\xba\x6f\xa5\xee\x13\x49\xf0\xee\x3b\xf2\xf7\x00\x00\x00\xff\xff\x84\x86\xc9\x1a\x58\x0e\x00\x00"

func dataReport_handlerTemplateBytes() ([]byte, error) {
	return bindataRead(
		_dataReport_handlerTemplate,
		"data/report_handler.template",
	)
}

func dataReport_handlerTemplate() (*asset, error) {
	bytes, err := dataReport_handlerTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/report_handler.template", size: 3672, mode: os.FileMode(420), modTime: time.Unix(1502125358, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/index_handler.template":  dataIndex_handlerTemplate,
	"data/node_handler.template":   dataNode_handlerTemplate,
	"data/report_handler.template": dataReport_handlerTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"index_handler.template":  &bintree{dataIndex_handlerTemplate, map[string]*bintree{}},
		"node_handler.template":   &bintree{dataNode_handlerTemplate, map[string]*bintree{}},
		"report_handler.template": &bintree{dataReport_handlerTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
