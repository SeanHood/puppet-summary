<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Node List</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.min.js"></script>
    <script type="text/javascript">
     window.onload = function () {


       //
       // We populate the tables in our template-generation
       // rather than having to keep a separate count here
       // we can see how many rows there are in the tables
       // and that gives us our count indirectly.
       //
       changed   = $('#changed_table tr').length - 1;
       unchanged = $('#unchanged_table tr').length - 1;
       failed    = $('#failed_table tr').length - 1;

       //
       // Update the tab-headers for `changed` & `failed`.
       //
       if ( changed > 0 ) { $('#changed_count').html( changed ) }
       if ( failed > 0 ) { $('#failed_count').html( failed )  }

       var barChartData = {
         labels: [
           {{range .Graph }}
           "{{.Date }}",
           {{end}}
         ],
         datasets: [{
           label: 'Changed',
           backgroundColor: '#d9edf7',
           data: [
           {{range .Graph }}
           "{{.Changed }}",
           {{end}}
           ]
         }, {
           label: 'Unchanged',
           backgroundColor: '#e7e7e7',
           data: [
           {{range .Graph }}
           "{{.Unchanged }}",
           {{end}}
           ]
         }, {
           label: 'failed',
           backgroundColor: '#f2dede',
           data: [
           {{range .Graph }}
           "{{.Failed }}",
           {{end}}
           ]
         }]

       };
       var ctx = document.getElementById("canvas").getContext("2d");
       window.myBar = new Chart(ctx, {
         type: 'bar',
         data: barChartData,
         options: {
           title:{
             display:false,
             text:"Chart.js Bar Chart - Stacked"
           },
           tooltips: {
             mode: 'index',
             intersect: false
           },
           responsive: true,
           scales: {
             xAxes: [{
               stacked: true,
             }],
             yAxes: [{
               stacked: true
             }]
           }
         }
       });

     };

    </script>
  </head>
  <body>
    <nav class="navbar navbar-default" role="navigation">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Puppet-Summary</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
	    <li><a href="/"> <span class="glyphicon glyphicon-home" aria-hidden="true"></span> Home</a></li>
          </ul>
        </div>
      </div>
    </nav>
    <div class="container">

      <h1>Node Summary</h1>

      <canvas id="canvas" style="height: 150px; width: 90%; margin-left:5%; margin-right:5%"></canvas>
      <div id="fcanvas" ></div>
      <p>&nbsp;</p>

      <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#all">All</a></li>
        <li><a data-toggle="tab" href="#failed">Failed <span class="badge" id="failed_count"></span></a></li>
        <li><a data-toggle="tab" href="#changed">Changed <span class="badge" id="changed_count"></span></a></li>
        <li><a data-toggle="tab" href="#unchanged">Unchanged</a></li></a></li>
      </ul>


      <div class="tab-content">
        <!-- All -->
        <div id="all" class="tab-pane fade in active">
          <table id="all_table" class="table table-bordered table-striped table-condensed table-hover">
            <tr>
              <th>Node</th>
              <th>State</th>
              <th>Seen</th>
            </tr>
            {{range .Nodes }}
            <tr
                {{if eq .State "failed" }} class="danger" {{ end }}
                {{if eq .State "changed" }} class="info"  {{ end }}
                data-href="/node/{{.Fqdn}}">
              <td>{{.Fqdn}}</td>
              <td>{{.State}}</td>
              <td class="time" datetime="{{.At}}">{{.At}}</td>
            </tr>
            {{end}}
          </table>
        </div>

        <!-- Failed -->
        <div id="failed" class="tab-pane fade">
          <table id="failed_table" class="table table-bordered table-striped table-condensed table-hover">
            <tr>
              <th>Node</th>
              <th>State</th>
              <th>Seen</th>
            </tr>
            {{range .Nodes }}
            {{if eq .State "failed" }}
            <tr class="danger" data-href="/node/{{.Fqdn}}">
              <td>{{.Fqdn}}</td>
              <td>{{.State}}</td>
              <td class="time" datetime="{{.At}}">{{.At}}</td>
            </tr>
            {{end}}
            {{end}}
          </table>
        </div>

        <!-- Changed -->
        <div id="changed" class="tab-pane fade">
          <table id="changed_table" class="table table-bordered table-striped table-condensed table-hover">
            <tr>
              <th>Node</th>
              <th>State</th>
              <th>Seen</th>
            </tr>
            {{range .Nodes }}
            {{if eq .State "changed" }}
            <tr class="info" data-href="/node/{{.Fqdn}}">
              <td>{{.Fqdn}}</td>
              <td>{{.State}}</td>
              <td class="time" datetime="{{.At}}">{{.At}}</td>
            </tr>
            {{end}}
            {{end}}
          </table>
        </div>

        <!-- Unchanged -->
        <div id="unchanged" class="tab-pane fade">
          <table id="unchanged_table" class="table table-bordered table-striped table-condensed table-hover">
            <tr>
              <th>Node</th>
              <th>State</th>
              <th>Seen</th>
            </tr>
            {{range .Nodes }}
            {{if eq .State "unchanged" }}
            <tr data-href="/node/{{.Fqdn}}">
              <td>{{.Fqdn}}</td>
              <td>{{.State}}</td>
              <td class="time" datetime="{{.At}}">{{.At}}</td>
            </tr>
            {{end}}
            {{end}}
          </table>
        </div>
      </div>

      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <hr />
      <footer id="footer">
        <div class="container">
          <div class="col-md-8">
          </div>
          <div class="col-md-4">
            <ul class="nav ">
              <li><a href="https://steve.kemp.fi/">Â© 2017 - Steve Kemp</a></li>
            </ul>
          </div>
        </div>
      </footer>
      <script type="text/javascript">
       $(function(){
         $('.table tr[data-href]').each(function(){
           $(this).css('cursor','pointer').hover(
             function(){
               $(this).addClass('active');
             },
             function(){
               $(this).removeClass('active');
             }).click( function(){
               document.location = $(this).attr('data-href');
             }
             );
         });

         var now = moment();

         $('.time').each(function(i, e) {
           var time = moment($(e).attr('datetime'));
           $(e).html('<span>' + time.from(now) + '</span>');
         });
       });
      </script>
  </body>
</html>
